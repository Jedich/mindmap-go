name: CI

on: [push, pull_request]

jobs:
  test:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    - name: Install dependencies
      run: go mod download
    - name: Build and Test
      run: go build ./... && go test ./...
          
  lint:
    name: Run Lint
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  
  push:
    name: Push to Docker Hub
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mindmap-be:latest
          uses: actions/checkout@v2

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mindmap-fe:latest
          uses: actions/checkout@v2
    
  deploy:
    name: Deploy to EC2 Instance
    needs: push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
            HOSTNAME : ${{ secrets.AWS_INSTANCE_HOSTNAME }}
            USER_NAME : ec2-user
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            sudo chmod +x /home/ec2-user/deploy.sh
            /home/ec2-user/deploy.sh
            '
